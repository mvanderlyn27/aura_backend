steps:
  # Install dependencies using Bun
  - name: 'oven/bun'
    entrypoint: 'bun'
    args: ['install']

  # Build the TypeScript project
  - name: 'oven/bun'
    entrypoint: 'bun'
    args: ['run', 'build']

  # Build the Docker image
  # Replace YOUR_GCP_PROJECT_ID, YOUR_ARTIFACT_REGISTRY_REGION, YOUR_ARTIFACT_REGISTRY_REPO, YOUR_IMAGE_NAME
  - name: 'gcr.io/cloud-builders/docker'
    args: [
        'build',
        '-t',
        '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${_GCP_PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:$COMMIT_SHA',
        '.'
      ]

  # Push the Docker image to Artifact Registry
  # Replace YOUR_GCP_PROJECT_ID, YOUR_ARTIFACT_REGISTRY_REGION, YOUR_ARTIFACT_REGISTRY_REPO, YOUR_IMAGE_NAME
  - name: 'gcr.io/cloud-builders/docker'
    args: [
        'push',
        '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${_GCP_PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:$COMMIT_SHA'
      ]

  # Deploy container image to Cloud Run
  # Replace YOUR_GCP_PROJECT_ID, YOUR_CLOUD_RUN_SERVICE_NAME, YOUR_CLOUD_RUN_REGION
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_CLOUD_RUN_SERVICE_NAME}'
      - '--image'
      - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${_GCP_PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:$COMMIT_SHA'
      - '--region'
      - '${_CLOUD_RUN_REGION}'
      - '--platform'
      - 'managed'
      - '--quiet' # Add --allow-unauthenticated if your service needs to be public

# Define substitutions for placeholders (you can set these in the Cloud Build trigger UI)
substitutions:
  _GCP_PROJECT_ID: 'aura-fitness-457121' # Replace with your Google Cloud Project ID
  _ARTIFACT_REGISTRY_REGION: 'us-central1' # e.g., us-central1
  _ARTIFACT_REGISTRY_REPO: 'aura-backend' # e.g., aura-backend-repo
  _IMAGE_NAME: 'aura-backend' # e.g., aura-backend-service
  _CLOUD_RUN_SERVICE_NAME: 'aura-backend-service' # e.g., aura-backend
  _CLOUD_RUN_REGION: 'us-central1' # e.g., us-central1

images:
  # Specify the final image pushed to Artifact Registry
  - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/${_GCP_PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
